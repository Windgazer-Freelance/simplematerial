/*
# Layout

This is an extremely opionionated use of my material design placeholders. However, since I
want my material design implementation to be simple and ready for the small apps I want to
work on, I decided to include this layout in the project, but leave it as an optional
implementation.
*/
$mt-menuWidth: $b__base-padding * 6 !default;

html,
body,
.body {
    height: 100%;
}

body,
.body {
    @extend %bodyFont !optional;
    margin: 0;
    padding: 0;
}

.body {
    overflow: hidden;
    position: relative;
}

p {
    margin: 0 0 $b__base-padding;
}

/*
# Menu

I'd like to use the actual `menu` element. And my current apps are to have a permanent
side-menu.

```
<menu>
    <li><a href="#home">Home</a></li>
    <li><a href="#about">About</a></li>
</menu>
```
*/
menu {
    box-sizing: border-box;
    height: 100%;
    margin: 0;
    padding: ($b__base-padding  / 2) 0 0 ($b__base-padding / 3);
    position: relative;
    text-align: center;
    width: $mt-menuWidth;
    z-index: 5;
}

body > menu,
.body > menu {
    @extend %mt-P500;
    @extend %mt-s-declinedRight !optional;
}

menu > li {
    @extend %reset;
}

menu > li > a {
    @extend %mt-flatButton;
}

/*
# Main Content Screens

I've chosen to use the `article` element to represent a 'content screen'. Any content is
expected to be wrapped in an `article` element. These are expected to take up the entire
content area, menu's excluded.

```
<menu>
    <li><a href="#__preview__">Home</a></li>
    <li><a href="#about">About</a></li>
</menu>
<article id="__preview__">
    <h1>Some testing required!</h1>
    <p>This is just a test layout. Should be easy to use in my HTML5 app development.</p>
</article>
<article id="about">
    <h1>Some explaining required!</h1>
    <p>Just a simple way of navigating between pages, without any need for javascript</p>
</article>
```
*/
body > article,
.body > article {
    @extend %mt-P000;
    @extend %mt-paperFibers;
    @extend %bodyFont !optional;
    bottom: 0;
    box-sizing: border-box;
    left: $mt-menuWidth;
    opacity: 0;
    overflow: auto; //articles are meant to be full-screen
    overflow-x: hidden;
    padding: 0 $b__base-padding;
    position: absolute;
    right: 0;
    top: 0;
}

body > article:target,
.body > article:target {
    opacity: 1;
}

/*
#Dialogs

I've chosen, probably to the outrage of many, to use the `nav` element to represent simple
dialogs. Dialogs are intended to be hovering windows with control-buttons.

Attempting to get as close as possible to the concepts as details on Google's Material
Design [specifications on dialogs](http://www.google.com/design/spec/components/dialogs.html).

```
<nav class="show">
    <h1>Do you use titles sparingly?</h1>
    <p>This text-body should in most cases adequately state your request for feedback.</p>
    <menu>
        <li><a href="#test">Cancel</a></li>
        <li><a href="#test">Ok</a></li>
    </menu>
</nav>
```
*/
nav {
    @extend %mt-s-floating;
    @extend %mt-P000;
    color: transparentize($b__color--transparent__000, 0.35);
    display: none;
    left: 50%;
    margin: $b__base-padding $b__base-padding $b__base-padding (-$b__base-padding * 7.5);
    padding: $b__base-padding;
    position: absolute;
    top: 0;
    width: $b__base-padding * 15;
    z-index: 20;
}

nav.show {
    display: block;
}

nav > h1 {
    @extend %mt-title;
    color: $b__color--transparent__000;
}

nav > menu {
    color: $b__color--transparent__000;
    margin: 0 (-$b__base-padding * 0.75) (-$b__base-padding * 0.75);
    text-align: right;
    width: auto;

    > li {
        display: inline-block;

        > a {
            @extend %mt-flatButtonP500;
        }
    }
}

/*
# Sneaky gradient overlay

In my apps I have my branding inside an `em` element which is a sibling to my dialogs. As
such I can abuse this branding to create my gradient overlay, preventing users from
interacting with the background, while the dialog is active.

```
<main class="body">
    <menu>
        <li><a href="#home">Home</a></li>
        <li><a href="#about">About</a></li>
    </menu>
    <article id="__preview__">
        <h1>Some testing required!</h1>
        <p>This is just a test layout. Should be easy to use in my HTML5 app development.</p>
    </article>
    <article id="about">
        <h1>Some explaining required!</h1>
        <p>Just a simple way of navigating between pages, without any need for javascript</p>
    </article>
    <nav class="show">
        <p>This is a quick and dirty solution, do you like it?.</p>
        <menu>
            <li><a href="#test">No</a></li>
            <li><a href="#test">Yes</a></li>
        </menu>
    </nav>
    <em class="branding">Windgazer</em>
</main>
```
*/
nav.show ~ em {
    background-color: rgba(0, 0, 0, 0.4);
    margin-left: -100em;
    margin-top: -100em;
    padding-left: 100em;
    padding-top: 100em;
    text-shadow:
        1px  1px rgba(255, 255, 255, 0.1),
        -1px -1px rgba(255, 255, 255, 0.1);
    z-index: 19;
}
